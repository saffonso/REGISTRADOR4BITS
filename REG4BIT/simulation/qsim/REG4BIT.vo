// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition"

// DATE "06/28/2024 14:55:33"

// 
// Device: Altera EP2C35F672C6 Package FBGA672
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module reg4bit (
	I,
	sel,
	clock,
	clear,
	S);
input 	[3:0] I;
input 	[1:0] sel;
input 	clock;
input 	clear;
output 	[3:0] S;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \M0|Mux0~0_combout ;
wire \M1|Mux0~0_combout ;
wire \M2|Mux0~0_combout ;
wire \M3|Mux0~0_combout ;
wire \clock~combout ;
wire \M1|Mux0~1_combout ;
wire \clear~combout ;
wire \F1|q~0_combout ;
wire \F1|q~regout ;
wire \M0|Mux0~1_combout ;
wire \F0|q~regout ;
wire \M2|Mux0~1_combout ;
wire \F2|q~regout ;
wire \M3|Mux0~1_combout ;
wire \F3|q~regout ;
wire [1:0] \sel~combout ;
wire [3:0] \I~combout ;


cycloneii_lcell_comb \M0|Mux0~0 (
// Equation(s):
// \M0|Mux0~0_combout  = (\sel~combout [0] & ((\I~combout [0]) # ((!\sel~combout [1])))) # (!\sel~combout [0] & (((\F0|q~regout  & !\sel~combout [1]))))

	.dataa(\sel~combout [0]),
	.datab(\I~combout [0]),
	.datac(\F0|q~regout ),
	.datad(\sel~combout [1]),
	.cin(gnd),
	.combout(\M0|Mux0~0_combout ),
	.cout());
// synopsys translate_off
defparam \M0|Mux0~0 .lut_mask = 16'h88FA;
defparam \M0|Mux0~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb \M1|Mux0~0 (
// Equation(s):
// \M1|Mux0~0_combout  = (\sel~combout [1] & ((\sel~combout [0] & (\I~combout [1])) # (!\sel~combout [0] & ((\F2|q~regout )))))

	.dataa(\sel~combout [1]),
	.datab(\I~combout [1]),
	.datac(\F2|q~regout ),
	.datad(\sel~combout [0]),
	.cin(gnd),
	.combout(\M1|Mux0~0_combout ),
	.cout());
// synopsys translate_off
defparam \M1|Mux0~0 .lut_mask = 16'h88A0;
defparam \M1|Mux0~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb \M2|Mux0~0 (
// Equation(s):
// \M2|Mux0~0_combout  = (\sel~combout [1] & ((\sel~combout [0] & (\I~combout [2])) # (!\sel~combout [0] & ((\F3|q~regout )))))

	.dataa(\sel~combout [1]),
	.datab(\I~combout [2]),
	.datac(\F3|q~regout ),
	.datad(\sel~combout [0]),
	.cin(gnd),
	.combout(\M2|Mux0~0_combout ),
	.cout());
// synopsys translate_off
defparam \M2|Mux0~0 .lut_mask = 16'h88A0;
defparam \M2|Mux0~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb \M3|Mux0~0 (
// Equation(s):
// \M3|Mux0~0_combout  = (!\sel~combout [1] & ((\sel~combout [0] & (\F2|q~regout )) # (!\sel~combout [0] & ((\F3|q~regout )))))

	.dataa(\F2|q~regout ),
	.datab(\F3|q~regout ),
	.datac(\sel~combout [0]),
	.datad(\sel~combout [1]),
	.cin(gnd),
	.combout(\M3|Mux0~0_combout ),
	.cout());
// synopsys translate_off
defparam \M3|Mux0~0 .lut_mask = 16'h00AC;
defparam \M3|Mux0~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_io \I[0]~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\I~combout [0]),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(I[0]));
// synopsys translate_off
defparam \I[0]~I .input_async_reset = "none";
defparam \I[0]~I .input_power_up = "low";
defparam \I[0]~I .input_register_mode = "none";
defparam \I[0]~I .input_sync_reset = "none";
defparam \I[0]~I .oe_async_reset = "none";
defparam \I[0]~I .oe_power_up = "low";
defparam \I[0]~I .oe_register_mode = "none";
defparam \I[0]~I .oe_sync_reset = "none";
defparam \I[0]~I .operation_mode = "input";
defparam \I[0]~I .output_async_reset = "none";
defparam \I[0]~I .output_power_up = "low";
defparam \I[0]~I .output_register_mode = "none";
defparam \I[0]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \I[1]~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\I~combout [1]),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(I[1]));
// synopsys translate_off
defparam \I[1]~I .input_async_reset = "none";
defparam \I[1]~I .input_power_up = "low";
defparam \I[1]~I .input_register_mode = "none";
defparam \I[1]~I .input_sync_reset = "none";
defparam \I[1]~I .oe_async_reset = "none";
defparam \I[1]~I .oe_power_up = "low";
defparam \I[1]~I .oe_register_mode = "none";
defparam \I[1]~I .oe_sync_reset = "none";
defparam \I[1]~I .operation_mode = "input";
defparam \I[1]~I .output_async_reset = "none";
defparam \I[1]~I .output_power_up = "low";
defparam \I[1]~I .output_register_mode = "none";
defparam \I[1]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \I[2]~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\I~combout [2]),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(I[2]));
// synopsys translate_off
defparam \I[2]~I .input_async_reset = "none";
defparam \I[2]~I .input_power_up = "low";
defparam \I[2]~I .input_register_mode = "none";
defparam \I[2]~I .input_sync_reset = "none";
defparam \I[2]~I .oe_async_reset = "none";
defparam \I[2]~I .oe_power_up = "low";
defparam \I[2]~I .oe_register_mode = "none";
defparam \I[2]~I .oe_sync_reset = "none";
defparam \I[2]~I .operation_mode = "input";
defparam \I[2]~I .output_async_reset = "none";
defparam \I[2]~I .output_power_up = "low";
defparam \I[2]~I .output_register_mode = "none";
defparam \I[2]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \clock~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\clock~combout ),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(clock));
// synopsys translate_off
defparam \clock~I .input_async_reset = "none";
defparam \clock~I .input_power_up = "low";
defparam \clock~I .input_register_mode = "none";
defparam \clock~I .input_sync_reset = "none";
defparam \clock~I .oe_async_reset = "none";
defparam \clock~I .oe_power_up = "low";
defparam \clock~I .oe_register_mode = "none";
defparam \clock~I .oe_sync_reset = "none";
defparam \clock~I .operation_mode = "input";
defparam \clock~I .output_async_reset = "none";
defparam \clock~I .output_power_up = "low";
defparam \clock~I .output_register_mode = "none";
defparam \clock~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \sel[1]~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\sel~combout [1]),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(sel[1]));
// synopsys translate_off
defparam \sel[1]~I .input_async_reset = "none";
defparam \sel[1]~I .input_power_up = "low";
defparam \sel[1]~I .input_register_mode = "none";
defparam \sel[1]~I .input_sync_reset = "none";
defparam \sel[1]~I .oe_async_reset = "none";
defparam \sel[1]~I .oe_power_up = "low";
defparam \sel[1]~I .oe_register_mode = "none";
defparam \sel[1]~I .oe_sync_reset = "none";
defparam \sel[1]~I .operation_mode = "input";
defparam \sel[1]~I .output_async_reset = "none";
defparam \sel[1]~I .output_power_up = "low";
defparam \sel[1]~I .output_register_mode = "none";
defparam \sel[1]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_lcell_comb \M1|Mux0~1 (
// Equation(s):
// \M1|Mux0~1_combout  = (\M1|Mux0~0_combout ) # ((\F0|q~regout  & !\sel~combout [1]))

	.dataa(\M1|Mux0~0_combout ),
	.datab(\F0|q~regout ),
	.datac(vcc),
	.datad(\sel~combout [1]),
	.cin(gnd),
	.combout(\M1|Mux0~1_combout ),
	.cout());
// synopsys translate_off
defparam \M1|Mux0~1 .lut_mask = 16'hAAEE;
defparam \M1|Mux0~1 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_io \clear~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\clear~combout ),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(clear));
// synopsys translate_off
defparam \clear~I .input_async_reset = "none";
defparam \clear~I .input_power_up = "low";
defparam \clear~I .input_register_mode = "none";
defparam \clear~I .input_sync_reset = "none";
defparam \clear~I .oe_async_reset = "none";
defparam \clear~I .oe_power_up = "low";
defparam \clear~I .oe_register_mode = "none";
defparam \clear~I .oe_sync_reset = "none";
defparam \clear~I .operation_mode = "input";
defparam \clear~I .output_async_reset = "none";
defparam \clear~I .output_power_up = "low";
defparam \clear~I .output_register_mode = "none";
defparam \clear~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_lcell_comb \F1|q~0 (
// Equation(s):
// \F1|q~0_combout  = (\sel~combout [0]) # (\sel~combout [1])

	.dataa(\sel~combout [0]),
	.datab(\sel~combout [1]),
	.datac(vcc),
	.datad(vcc),
	.cin(gnd),
	.combout(\F1|q~0_combout ),
	.cout());
// synopsys translate_off
defparam \F1|q~0 .lut_mask = 16'hEEEE;
defparam \F1|q~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_ff \F1|q (
	.clk(\clock~combout ),
	.datain(\M1|Mux0~1_combout ),
	.sdata(gnd),
	.aclr(\clear~combout ),
	.sclr(gnd),
	.sload(gnd),
	.ena(\F1|q~0_combout ),
	.devclrn(devclrn),
	.devpor(devpor),
	.regout(\F1|q~regout ));

cycloneii_io \sel[0]~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\sel~combout [0]),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(sel[0]));
// synopsys translate_off
defparam \sel[0]~I .input_async_reset = "none";
defparam \sel[0]~I .input_power_up = "low";
defparam \sel[0]~I .input_register_mode = "none";
defparam \sel[0]~I .input_sync_reset = "none";
defparam \sel[0]~I .oe_async_reset = "none";
defparam \sel[0]~I .oe_power_up = "low";
defparam \sel[0]~I .oe_register_mode = "none";
defparam \sel[0]~I .oe_sync_reset = "none";
defparam \sel[0]~I .operation_mode = "input";
defparam \sel[0]~I .output_async_reset = "none";
defparam \sel[0]~I .output_power_up = "low";
defparam \sel[0]~I .output_register_mode = "none";
defparam \sel[0]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_lcell_comb \M0|Mux0~1 (
// Equation(s):
// \M0|Mux0~1_combout  = (\M0|Mux0~0_combout ) # ((\F1|q~regout  & (\sel~combout [1] & !\sel~combout [0])))

	.dataa(\M0|Mux0~0_combout ),
	.datab(\F1|q~regout ),
	.datac(\sel~combout [1]),
	.datad(\sel~combout [0]),
	.cin(gnd),
	.combout(\M0|Mux0~1_combout ),
	.cout());
// synopsys translate_off
defparam \M0|Mux0~1 .lut_mask = 16'hAAEA;
defparam \M0|Mux0~1 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_ff \F0|q (
	.clk(\clock~combout ),
	.datain(\M0|Mux0~1_combout ),
	.sdata(gnd),
	.aclr(\clear~combout ),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.regout(\F0|q~regout ));

cycloneii_lcell_comb \M2|Mux0~1 (
// Equation(s):
// \M2|Mux0~1_combout  = (\M2|Mux0~0_combout ) # ((\F1|q~regout  & !\sel~combout [1]))

	.dataa(\M2|Mux0~0_combout ),
	.datab(\F1|q~regout ),
	.datac(vcc),
	.datad(\sel~combout [1]),
	.cin(gnd),
	.combout(\M2|Mux0~1_combout ),
	.cout());
// synopsys translate_off
defparam \M2|Mux0~1 .lut_mask = 16'hAAEE;
defparam \M2|Mux0~1 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_ff \F2|q (
	.clk(\clock~combout ),
	.datain(\M2|Mux0~1_combout ),
	.sdata(gnd),
	.aclr(\clear~combout ),
	.sclr(gnd),
	.sload(gnd),
	.ena(\F1|q~0_combout ),
	.devclrn(devclrn),
	.devpor(devpor),
	.regout(\F2|q~regout ));

cycloneii_io \I[3]~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\I~combout [3]),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(I[3]));
// synopsys translate_off
defparam \I[3]~I .input_async_reset = "none";
defparam \I[3]~I .input_power_up = "low";
defparam \I[3]~I .input_register_mode = "none";
defparam \I[3]~I .input_sync_reset = "none";
defparam \I[3]~I .oe_async_reset = "none";
defparam \I[3]~I .oe_power_up = "low";
defparam \I[3]~I .oe_register_mode = "none";
defparam \I[3]~I .oe_sync_reset = "none";
defparam \I[3]~I .operation_mode = "input";
defparam \I[3]~I .output_async_reset = "none";
defparam \I[3]~I .output_power_up = "low";
defparam \I[3]~I .output_register_mode = "none";
defparam \I[3]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_lcell_comb \M3|Mux0~1 (
// Equation(s):
// \M3|Mux0~1_combout  = (\M3|Mux0~0_combout ) # ((\sel~combout [0] & (\sel~combout [1] & \I~combout [3])))

	.dataa(\M3|Mux0~0_combout ),
	.datab(\sel~combout [0]),
	.datac(\sel~combout [1]),
	.datad(\I~combout [3]),
	.cin(gnd),
	.combout(\M3|Mux0~1_combout ),
	.cout());
// synopsys translate_off
defparam \M3|Mux0~1 .lut_mask = 16'hEAAA;
defparam \M3|Mux0~1 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_ff \F3|q (
	.clk(\clock~combout ),
	.datain(\M3|Mux0~1_combout ),
	.sdata(gnd),
	.aclr(\clear~combout ),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.regout(\F3|q~regout ));

cycloneii_io \S[0]~I (
	.datain(\F0|q~regout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(S[0]));
// synopsys translate_off
defparam \S[0]~I .input_async_reset = "none";
defparam \S[0]~I .input_power_up = "low";
defparam \S[0]~I .input_register_mode = "none";
defparam \S[0]~I .input_sync_reset = "none";
defparam \S[0]~I .oe_async_reset = "none";
defparam \S[0]~I .oe_power_up = "low";
defparam \S[0]~I .oe_register_mode = "none";
defparam \S[0]~I .oe_sync_reset = "none";
defparam \S[0]~I .operation_mode = "output";
defparam \S[0]~I .output_async_reset = "none";
defparam \S[0]~I .output_power_up = "low";
defparam \S[0]~I .output_register_mode = "none";
defparam \S[0]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \S[1]~I (
	.datain(\F1|q~regout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(S[1]));
// synopsys translate_off
defparam \S[1]~I .input_async_reset = "none";
defparam \S[1]~I .input_power_up = "low";
defparam \S[1]~I .input_register_mode = "none";
defparam \S[1]~I .input_sync_reset = "none";
defparam \S[1]~I .oe_async_reset = "none";
defparam \S[1]~I .oe_power_up = "low";
defparam \S[1]~I .oe_register_mode = "none";
defparam \S[1]~I .oe_sync_reset = "none";
defparam \S[1]~I .operation_mode = "output";
defparam \S[1]~I .output_async_reset = "none";
defparam \S[1]~I .output_power_up = "low";
defparam \S[1]~I .output_register_mode = "none";
defparam \S[1]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \S[2]~I (
	.datain(\F2|q~regout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(S[2]));
// synopsys translate_off
defparam \S[2]~I .input_async_reset = "none";
defparam \S[2]~I .input_power_up = "low";
defparam \S[2]~I .input_register_mode = "none";
defparam \S[2]~I .input_sync_reset = "none";
defparam \S[2]~I .oe_async_reset = "none";
defparam \S[2]~I .oe_power_up = "low";
defparam \S[2]~I .oe_register_mode = "none";
defparam \S[2]~I .oe_sync_reset = "none";
defparam \S[2]~I .operation_mode = "output";
defparam \S[2]~I .output_async_reset = "none";
defparam \S[2]~I .output_power_up = "low";
defparam \S[2]~I .output_register_mode = "none";
defparam \S[2]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \S[3]~I (
	.datain(\F3|q~regout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(S[3]));
// synopsys translate_off
defparam \S[3]~I .input_async_reset = "none";
defparam \S[3]~I .input_power_up = "low";
defparam \S[3]~I .input_register_mode = "none";
defparam \S[3]~I .input_sync_reset = "none";
defparam \S[3]~I .oe_async_reset = "none";
defparam \S[3]~I .oe_power_up = "low";
defparam \S[3]~I .oe_register_mode = "none";
defparam \S[3]~I .oe_sync_reset = "none";
defparam \S[3]~I .operation_mode = "output";
defparam \S[3]~I .output_async_reset = "none";
defparam \S[3]~I .output_power_up = "low";
defparam \S[3]~I .output_register_mode = "none";
defparam \S[3]~I .output_sync_reset = "none";
// synopsys translate_on

endmodule
